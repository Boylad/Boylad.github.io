<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2019 on Boylad</title>
    <link>https://guankui.name/categories/2019/</link>
    <description>Recent content in 2019 on Boylad</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Wed, 07 Aug 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://guankui.name/categories/2019/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Tanabata</title>
      <link>https://guankui.name/posts/before2020/2019-08-07-tanabata/</link>
      <pubDate>Wed, 07 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://guankui.name/posts/before2020/2019-08-07-tanabata/</guid>
      <description>八月的Q城，除非呆在有空调的房间里，否则你一定能够感受到这个夏天满满的恶意，那种闷热令人窒息。
除了中午去四食堂吃午饭之外，整个白天我都猫在图书馆里。本来是应该修改量化框架的，但这次我把坑挖得太大了，以至于这几天我总是望而却步。不过今天学了不少HTML的知识，也算是劳有所获吧。
因为暑假，图书馆下午4点半就早早地打烊了，我不得不收拾东西回宿舍。走出图书馆，暑气袭面而来，骄阳似火，烈日灼心，仿佛要将这个糟糕的世界熔化似的。在回南海苑的路上我遇见了Nabin，于是决定一起顺路去Ministop便利店买冷饮喝。结帐的时候我发现手机早已Power Off &amp;amp; Shut Down，只好Nabin请客了。不过，海盐味的甜筒味道真是棒极了。
YC一如既往地喊我去跑步，但他神经质般地表示今天要跑7.7Km，我说：“今天对我而言并没有什么不同，所以我还是和往常一样，但我会看着你跑玩完7.7Km”。于是在这个七夕的傍晚，YC果真跑了7.7Km。
洗澡之后，没吃晚饭，只喝了两瓶冷咖啡。整个晚上我都没离开宿舍，期间，只有妈妈打过来过一个电话。这个晚上我突然感受到了一种难以名状的孤独。我终于意识到了一件很重要的事情。Now, it’s time to recruit my GF.
这几年来，发生了很多事，喜忧参半，人各自知。或许正如席慕容说的那样，美丽的梦和美丽的诗一样，都是可遇而不可求的吧。
花开堪折直须折，莫待无花空折枝。满目山河空念远，不如怜取眼前人。</description>
    </item>
    
    <item>
      <title>Python“画”小猪佩奇</title>
      <link>https://guankui.name/posts/before2020/2019-05-08-python%E7%94%BB%E5%B0%8F%E7%8C%AA%E4%BD%A9%E5%A5%87/</link>
      <pubDate>Wed, 08 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://guankui.name/posts/before2020/2019-05-08-python%E7%94%BB%E5%B0%8F%E7%8C%AA%E4%BD%A9%E5%A5%87/</guid>
      <description>四月份的时候，学院举办的数学文化节中一项活动是通过编程的方法画一只小猪佩奇。当时我初学Python没多久，知道有一个turtle库可以控制笔触在画布上移动而形成图案。于是我就想着以此来‘画’一只小猪佩奇，作为初学Python编程的一次尝试。
对于一个复杂且无规律可循的图案，通过代码控制笔触是匪夷所思的。我意识到可以将每个像素点画出来，这样只需要不断画直线就可以了，但这意味着低效率。为了提高效率，我尝试了并行计算——同时画多条直线，然而我没能成功。从理论上讲这是完全可以实现的，可能是我对Python还不够熟悉吧。
对于一个复杂且无规律可循的图案，通过代码控制笔触是匪夷所思的。我意识到可以将每个像素点画出来，这样只需要不断画直线就可以了，但这意味着低效率。为了提高效率，我尝试了并行计算——同时画多条直线，然而我没能成功。从理论上讲这是完全可以实现的，可能是我对Python还不够熟悉吧。
import urllib.request from PIL import Image import turtle import os url = &amp;#34;https://raw.githubusercontent.com/Guankuiliu/image/master/Figure2018/git/Peppa_Pig.jpg&amp;#34; name = &amp;#34;Peppa_Pig.jpg&amp;#34; conn = urllib.request.urlopen(url) f = open(name,&amp;#39;wb&amp;#39;) f.write(conn.read()) f.close() im = Image.open(&amp;#34;Peppa_Pig.jpg&amp;#34;) im = im.resize((180, 180)) im = im.rotate(90) os.remove(&amp;#34;Peppa_Pig.jpg&amp;#34;) width = im.size[0] height = im.size[1] im = im.convert(&amp;#39;RGB&amp;#39;) array = [] for x in range(width): for y in range(height): r, g, b = im.getpixel((x,y)) rgb = (r/255, g/255, b/255) array.append(rgb) turtle.</description>
    </item>
    
  </channel>
</rss>
